---
title: "class9"
author: "Hayley Macleod"
date: "1 May 2018"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:

```{r}
 # Complete the following code to input the data and store as wisc.df
  wisc.df <- read.csv("https://bioboot.github.io/bimm143_W18/class-material/WisconsinCancer.csv")
  
  # Convert the features of the data: wisc.data
  wisc.data <- as.matrix(wisc.df[,3:ncol(wisc.df)])
 
  # Set the row names of wisc.data 
  rownames(wisc.data) <- wisc.df$id
  head(wisc.data)
  
  wisc.data <- wisc.data[, -31]
  head(wisc.data)
  
```


```{r}
# Create diagnosis vector by completing the missing code
diagnosis <- as.numeric(wisc.df$diagnosis == "M")
table(diagnosis)
```

#Q1: 
```{r}
dim(wisc.data)
```
#observations = patients, genes ect 
#569 obs of 33 variables 

#Q2:
```{r}
colnames(wisc.data)
```
```{r}
grep(pattern = "_mean", x = colnames(wisc.data), value = TRUE)
```
#ANS Q2 is 10 variables 

#Q3:
```{r}
table(diagnosis)
```
#212 malignant diagnosis 

```{r}
# Check column means and standard deviations
colMeans(wisc.data)

```

```{r}
apply(wisc.data,2,sd)
```

```{r}
# Perform PCA on wisc.data by completing the following code
wisc.pr <- prcomp(wisc.data, scale = TRUE)
```

```{r}
# Look at summary of results
summary(wisc.pr)
```

#fixing the error message with the collumn 31 with the X and N/a... [,-31] ^
```{r}
plot(colMeans(wisc.data))
```

```{r}
wisc.df$X
```


#Q4 : Proportion of Variance 0.4427= 44%


#Q5 : 3 components to get 70% >>> 0.72636 = 72% (ANS = PC3)

#Q6: ANS = PC7 

```{r}
biplot(wisc.pr)
```

```{r}
# Scatter plot observations by components 1 and 2
plot(wisc.pr$x[,1], wisc.pr$x[,2], col = diagnosis, 
     xlab = "PC1", ylab = "PC2")
```

```{r}
# Repeat for components 1 and 3
plot(wisc.pr$x[, c(1, 3)], col = (diagnosis + 1), 
     xlab = "PC1", ylab = "PC3")

```

##varience explained: scree plot 
```{r}
#calculate vaience of each component 
pr.var <- wisc.pr$sdev^2
head(pr.var)
```

#proportion of varience 
```{r}
pve <- pr.var / sum(pr.var )
```


```{r}
# Plot cumulative proportion of variance explained
plot(cumsum(pve), xlab = "Principal Component", 
     ylab = "Cumulative Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```

#Hierarchal clustering 

```{r}
data.scaled <- scale(wisc.data)

data.dist <- dist(data.scaled)

wisc.hclust <- hclust(data.dist)

plot(wisc.hclust)
```

```{r}
wisc.hclust.clusters <- cutree(wisc.hclust, h = 20)
table(wisc.hclust.clusters, diagnosis)

```

```{r}
wisc.km <- kmeans(scale(wisc.data), 2, nstart = 20) 
table(wisc.km$cluster, diagnosis)
```

```{r}
table(wisc.km$cluster, wisc.hclust.clusters)
```

```{r}
## Use the distance along the first 7 PCs for clustering i.e. wisc.pr$x[, 1:7]
wisc.pr.hclust <- hclust(dist(wisc.pr$x[,1:7]))

plot(wisc.pr.hclust)
```

```{r}
wisc.pr.hclust.clusters <- cutree(wisc.pr.hclust, k=4)
```

using "table()" compare the results from your new hierarchical clustering model with the actual diadnoses 

```{r}
table(wisc.pr.hclust.clusters, diagnosis)
```





